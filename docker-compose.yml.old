version: "3"
services:
  plex:
    image: plexinc/pms-docker:latest
    container_name: plex
    environment:
      - TZ=Europe/Paris
      - PLEX_CLAIM=claim-Kyd5zDP98AxrDR_xAf1G
      - ADVERTISE_IP=https://plex.gopnik.net:443
      - PLEX_UID=1000
      - PLEX_GID=1000
      - VERSION=docker
    volumes:
      - /opt/plex/config:/config
      - /opt/plex/transcode:/transcode
      - /data:/data
    hostname: plex.gopnik.net
    ports:
     - 32400:32400/tcp
     - 32400:32400/udp
     - 3005:3005/tcp
     - 8324:8324/tcp
     - 32469:32469/tcp
     - 1900:1900/udp
     - 32410:32410/udp
     - 32412:32412/udp
     - 32413:32413/udp
     - 32414:32414/udp
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.plex.rule=Host(`plex.gopnik.net`)"
      - "traefik.http.routers.plex.entrypoints=websecure"
      - "traefik.http.routers.plex.tls.certresolver=mydnschallenge"
      - "traefik.http.services.plex.loadbalancer.server.port=32400"

  sonarr:
    image: linuxserver/sonarr:preview
    container_name: sonarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Paris
      - UMASK_SET=022 #optional
    volumes:
      - /opt/sonarr/config:/config
      - /data:/data
    hostname: sonarr.gopnik.net
    ports:
      - 8989:8989
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.sonarr.rule=Host(`sonarr.gopnik.net`)"
      - "traefik.http.routers.sonarr.entrypoints=websecure"
      - "traefik.http.routers.sonarr.tls.certresolver=mydnschallenge"
      - "traefik.http.services.sonarr.loadbalancer.server.port=8989"
    restart: unless-stopped

  sonarrVF:
    image: linuxserver/sonarr:preview
    container_name: sonarrVF
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Paris
      - UMASK_SET=022 #optional
    volumes:
      - /opt/sonarrvf/config:/config
      - /data:/data
    hostname: sonarrvf.gopnik.net
    ports:
      - 8990:8990
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.sonarrvf.rule=Host(`sonarrvf.gopnik.net`)"
      - "traefik.http.routers.sonarrvf.entrypoints=websecure"
      - "traefik.http.routers.sonarrvf.tls.certresolver=mydnschallenge"
      - "traefik.http.services.sonarrvf.loadbalancer.server.port=8990"
    restart: unless-stopped

  radarr:
    image: linuxserver/radarr:preview
    container_name: radarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Paris
      - UMASK_SET=022 #optional
    volumes:
      - /opt/radarr/config:/config
      - /data:/data
    hostname: radarr.gopnik.net
    ports:
      - 7878:7878
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.radarr.rule=Host(`radarr.gopnik.net`)"
      - "traefik.http.routers.radarr.entrypoints=websecure"
      - "traefik.http.routers.radarr.tls.certresolver=mydnschallenge"
      - "traefik.http.services.radarr.loadbalancer.server.port=7878"
    restart: unless-stopped

  radarrVF:
    image: linuxserver/radarr:preview
    container_name: radarrVF
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Paris
      - UMASK_SET=022 #optional
    volumes:
      - /opt/radarrvf/config:/config
      - /data:/data
    hostname: radarrvf.gopnik.net
    ports:
      - 7879:7879
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.radarrvf.rule=Host(`radarrvf.gopnik.net`)"
      - "traefik.http.routers.radarrvf.entrypoints=websecure"
      - "traefik.http.routers.radarrvf.tls.certresolver=mydnschallenge"
      - "traefik.http.services.radarrvf.loadbalancer.server.port=7879"
    restart: unless-stopped

  qbittorrent:
    image: linuxserver/qbittorrent:latest
    container_name: qbittorrent
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Paris
      - UMASK_SET=022
      - WEBUI_PORT=6565
    volumes:
      - /opt/qbittorrent/config:/config
      - /data:/data
    hostname: qbit.gopnik.net
    ports:
      - 6881:6881
      - 6881:6881/udp
      - 6565:6565
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.qbit.rule=Host(`qbit.gopnik.net`)"
      - "traefik.http.routers.qbit.entrypoints=websecure"
      - "traefik.http.routers.qbit.tls.certresolver=mydnschallenge"
      - "traefik.http.services.qbit.loadbalancer.server.port=6565"
    restart: unless-stopped


  jackett:
    image: linuxserver/jackett
    container_name: jackett
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Paris
      - RUN_OPTS=run options here #optional
    volumes:
      - /opt/jackett/config:/config
      - /opt/jackett/downloads:/downloads
    hostname: jackett.gopnik.net
    ports:
      - 9117:9117
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.jackett.rule=Host(`jackett.gopnik.net`)"
      - "traefik.http.routers.jackett.entrypoints=websecure"
      - "traefik.http.routers.jackett.tls.certresolver=mydnschallenge"
      - "traefik.http.services.jackett.loadbalancer.server.port=9117"
    restart: unless-stopped

  tautulli:
    image: linuxserver/tautulli
    container_name: tautulli
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Paris
    volumes:
      - /opt/tautulli/config:/config
      - /opt/plex/config/Library/Application\ Support/Plex\ Media\ Server/Logs/:/logs
    hostname: tautulli.gopnik.net
    ports:
      - 8181:8181
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.tautulli.rule=Host(`tautulli.gopnik.net`)"
      - "traefik.http.routers.tautulli.entrypoints=websecure"
      - "traefik.http.routers.tautulli.tls.certresolver=mydnschallenge"
      - "traefik.http.services.tautulli.loadbalancer.server.port=8181"
    restart: unless-stopped

  bazarr:
    image: linuxserver/bazarr
    container_name: bazarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Paris
      - UMASK_SET=022 #optional
    volumes:
      - /opt/bazarr/config:/config
      - /data:/data
    hostname: bazarr.gopnik.net
    ports:
      - 6767:6767
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.bazarr.rule=Host(`bazarr.gopnik.net`)"
      - "traefik.http.routers.bazarr.entrypoints=websecure"
      - "traefik.http.routers.bazarr.tls.certresolver=mydnschallenge"
      - "traefik.http.services.bazarr.loadbalancer.server.port=8181"
    restart: unless-stopped

  ombi:
    image: linuxserver/ombi
    container_name: ombi
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Paris
      - BASE_URL=/ombi #optional
    volumes:
      - /opt/ombi/config:/config
    hostname: ombi.gopnik.net
    ports:
      - 3579:3579
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.ombi.rule=Host(`ombi.gopnik.net`)"
      - "traefik.http.routers.ombi.entrypoints=websecure"
      - "traefik.http.routers.ombi.tls.certresolver=mydnschallenge"
      - "traefik.http.services.ombi.loadbalancer.server.port=3579"
    restart: unless-stopped

#  heimdall:
#    image: linuxserver/heimdall
#    container_name: heimdall
#    environment:
#      - PUID=1000
#      - PGID=1000
#      - TZ=Europe/Paris
#    volumes:
#      - /opt/heimdall/config:/config
#    hostname: gopnik.net
#    ports:
#      - 9191:9191  #nginx http def 80
#      - 9292:9292  #nginx https def 443
#    labels:
#      - "traefik.enable=true"
#      - "traefik.http.routers.heimdall.rule=Host(`gopnik.net`)"
#      - "traefik.http.routers.heimdall.entrypoints=websecure"
#      - "traefik.http.routers.heimdall.tls.certresolver=mydnschallenge"
#      - "traefik.http.services.heimdall.loadbalancer.server.port=9191"
#    restart: unless-stopped

  portainer:
    image: portainer/portainer
    container_name: portainer
    command: -H unix:///var/run/docker.sock
    restart: always
    hostname: portainer.gopnik.net
    ports:
      - 9000:9000
      - 8000:8000
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.portainer.rule=Host(`portainer.gopnik.net`)"
      - "traefik.http.routers.portainer.entrypoints=websecure"
      - "traefik.http.routers.portainer.tls.certresolver=mydnschallenge"
    #  - "traefik.http.services.portainer.loadbalancer.server.port=9000"
      - "traefik.docker.network=plex-treafik_default"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data

#  sinusbot:
#    image: sinusbot/docker
#    restart: always
#    ports:
#      - 8087:8087
#    volumes:
#      - ./scripts:/opt/sinusbot/scripts
#      - ./data:/opt/sinusbot/data
#    labels:
#      - "traefik.enable=true"
#      - "traefik.http.routers.sinusbot.rule=Host(`sinus.gopnik.net`)"
#      - "traefik.http.routers.sinusbot.entrypoints=websecure"
#      - "traefik.http.routers.sinusbot.tls.certresolver=mydnschallenge"
#      - "traefik.http.services.sinusbot.loadbalancer.server.port=8087"

  mellow:
    image: voidp/mellow
    ports:
      - "5060:5060"
    volumes:
      - /opt/appdata/mellow/:/usr/src/app/data/
    environment:
      - PORT=5060
      - JWT_SECRET=password123
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mellow.rule=Host(`mellow.gopnik.net`)"
      - "traefik.http.routers.mellow.entrypoints=websecure"
      - "traefik.http.routers.mellow.tls.certresolver=mydnschallenge"
      - "traefik.http.services.mellow.loadbalancer.server.port=5060"

  nzbget:
    image: linuxserver/nzbget
    container_name: nzbget
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Paris
    volumes:
      - /opt/nzbget/config:/config
      - /data:/data
    ports:
      - 6789:6789
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nzbget.rule=Host(`nzbget.gopnik.net`)"
      - "traefik.http.routers.nzbget.entrypoints=websecure"
      - "traefik.http.routers.nzbget.tls.certresolver=mydnschallenge"
      - "traefik.http.services.nzbget.loadbalancer.server.port=6789"


  influxdb:
    hostname: influxdb
    container_name: influxdb
    image: influxdb
#    networks:
#      - internal
    volumes:
      - /opt/influxdb:/var/lib/influxdb
    restart: unless-stopped
    
  varken:
    hostname: varken
    container_name: varken
    image: boerderij/varken
#    networks:
#      - internal
    volumes:
      - /opt/varken:/config
    environment:
      - TZ=Europe/Paris
      - VRKN_GLOBAL_SONARR_SERVER_IDS=1,2
      - VRKN_GLOBAL_RADARR_SERVER_IDS=1,2
      - VRKN_GLOBAL_LIDARR_SERVER_IDS=false
      - VRKN_GLOBAL_TAUTULLI_SERVER_IDS=1
      - VRKN_GLOBAL_OMBI_SERVER_IDS=1
      - VRKN_GLOBAL_SICKCHILL_SERVER_IDS=false
      - VRKN_GLOBAL_UNIFI_SERVER_IDS=false
      - VRKN_GLOBAL_MAXMIND_LICENSE_KEY=fFGLnJeuEKi8Z69j
      - VRKN_INFLUXDB_URL=influxdb
      - VRKN_INFLUXDB_PORT=8086
      - VRKN_INFLUXDB_SSL=false
      - VRKN_INFLUXDB_VERIFY_SSL=false
      - VRKN_INFLUXDB_USERNAME=root
      - VRKN_INFLUXDB_PASSWORD=root
      - VRKN_TAUTULLI_1_URL=tautulli.gopnik.net:443
      - VRKN_TAUTULLI_1_FALLBACK_IP=51.210.10.140
      - VRKN_TAUTULLI_1_APIKEY=fd78dbf8dcde4e3c9e8e5f22a6e14fb2
      - VRKN_TAUTULLI_1_SSL=true
      - VRKN_TAUTULLI_1_VERIFY_SSL=true
      - VRKN_TAUTULLI_1_GET_ACTIVITY=true
      - VRKN_TAUTULLI_1_GET_ACTIVITY_RUN_SECONDS=30
      - VRKN_TAUTULLI_1_GET_STATS=true
      - VRKN_TAUTULLI_1_GET_STATS_RUN_SECONDS=3600
      - VRKN_SONARR_1_URL=sonarr.gopnik.net:443
      - VRKN_SONARR_1_APIKEY=a7705bc09b3b40ff914b34dbec9226c1
      - VRKN_SONARR_1_SSL=true
      - VRKN_SONARR_1_VERIFY_SSL=true
      - VRKN_SONARR_1_MISSING_DAYS=7
      - VRKN_SONARR_1_MISSING_DAYS_RUN_SECONDS=300
      - VRKN_SONARR_1_FUTURE_DAYS=1
      - VRKN_SONARR_1_FUTURE_DAYS_RUN_SECONDS=300
      - VRKN_SONARR_1_QUEUE=true
      - VRKN_SONARR_1_QUEUE_RUN_SECONDS=300
      - VRKN_SONARR_2_URL=sonarrvf.gopnik.net:443
      - VRKN_SONARR_2_APIKEY=a7705bc09b3b40ff914b34dbec9226c1
      - VRKN_SONARR_2_SSL=true
      - VRKN_SONARR_2_VERIFY_SSL=true
      - VRKN_SONARR_2_MISSING_DAYS=7
      - VRKN_SONARR_2_MISSING_DAYS_RUN_SECONDS=300
      - VRKN_SONARR_2_FUTURE_DAYS=1
      - VRKN_SONARR_2_FUTURE_DAYS_RUN_SECONDS=300
      - VRKN_SONARR_2_QUEUE=true
      - VRKN_SONARR_2_QUEUE_RUN_SECONDS=300
      - VRKN_RADARR_1_URL=radarr.gopnik.net:443
      - VRKN_RADARR_1_APIKEY=81408eb624c249fdbbee09e32726a33f
      - VRKN_RADARR_1_SSL=true
      - VRKN_RADARR_1_VERIFY_SSL=true
      - VRKN_RADARR_1_QUEUE=true
      - VRKN_RADARR_1_QUEUE_RUN_SECONDS=300
      - VRKN_RADARR_1_GET_MISSING=true
      - VRKN_RADARR_1_GET_MISSING_RUN_SECONDS=300
      - VRKN_RADARR_2_URL=radarrvf.gopnik.net:443
      - VRKN_RADARR_2_APIKEY=cd8f9f2af9bc47818e9d35200f11f514
      - VRKN_RADARR_2_SSL=true
      - VRKN_RADARR_2_VERIFY_SSL=true
      - VRKN_RADARR_2_QUEUE=true
      - VRKN_RADARR_2_QUEUE_RUN_SECONDS=300
      - VRKN_RADARR_2_GET_MISSING=true
      - VRKN_RADARR_2_GET_MISSING_RUN_SECONDS=300
#      - VRKN_LIDARR_1_URL=lidarr1.domain.tld:8686
#      - VRKN_LIDARR_1_APIKEY=xxxxxxxxxxxxxxxx
#      - VRKN_LIDARR_1_SSL=false
#      - VRKN_LIDARR_1_VERIFY_SSL=false
#      - VRKN_LIDARR_1_MISSING_DAYS=30
#      - VRKN_LIDARR_1_MISSING_DAYS_RUN_SECONDS=300
#      - VRKN_LIDARR_1_FUTURE_DAYS=30
#      - VRKN_LIDARR_1_FUTURE_DAYS_RUN_SECONDS=300
#      - VRKN_LIDARR_1_QUEUE=true
#      - VRKN_LIDARR_1_QUEUE_RUN_SECONDS=300
      - VRKN_OMBI_1_URL=ombi.gopnik.net:443
      - VRKN_OMBI_1_APIKEY=2facf4ca88f64a948281a0bdc06e4a0f
      - VRKN_OMBI_1_SSL=true
      - VRKN_OMBI_1_VERIFY_SSL=true
      - VRKN_OMBI_1_GET_REQUEST_TYPE_COUNTS=true
      - VRKN_OMBI_1_REQUEST_TYPE_RUN_SECONDS=300
      - VRKN_OMBI_1_GET_REQUEST_TOTAL_COUNTS=true
      - VRKN_OMBI_1_REQUEST_TOTAL_RUN_SECONDS=300
      - VRKN_OMBI_1_GET_ISSUE_STATUS_COUNTS=true
      - VRKN_OMBI_1_ISSUE_STATUS_RUN_SECONDS=300
#      - VRKN_SICKCHILL_1_URL=sickchill.domain.tld:8081
#      - VRKN_SICKCHILL_1_APIKEY=xxxxxxxxxxxxxxxx
#      - VRKN_SICKCHILL_1_SSL=false
#      - VRKN_SICKCHILL_1_VERIFY_SSL=false
#      - VRKN_SICKCHILL_1_GET_MISSING=true
#      - VRKN_SICKCHILL_1_GET_MISSING_RUN_SECONDS=300
#      - VRKN_UNIFI_1_URL=unifi.domain.tld:8443
#      - VRKN_UNIFI_1_USERNAME=ubnt
#      - VRKN_UNIFI_1_PASSWORD=ubnt
#      - VRKN_UNIFI_1_SITE=default
#      - VRKN_UNIFI_1_USG_NAME=MyRouter
#      - VRKN_UNIFI_1_SSL=false
#      - VRKN_UNIFI_1_VERIFY_SSL=false
#      - VRKN_UNIFI_1_GET_USG_STATS_RUN_SECONDS=300
    depends_on:
      - influxdb
    restart: unless-stopped
  grafana:
    hostname: grafana
    container_name: grafana
    image: grafana/grafana
#    networks:
#      - internal
    ports:
      - 3000:3000
    volumes: 
      - /opt/grafana:/config
    environment:
      - GF_PATHS_DATA=/config/data
      - GF_PATHS_LOGS=/config/logs
      - GF_PATHS_PLUGINS=/config/plugins
      - GF_INSTALL_PLUGINS=grafana-piechart-panel,grafana-worldmap-panel
    depends_on:
      - influxdb
      - varken
    restart: unless-stopped

######################################################################################################################

  traefik:
    restart: always
    image: traefik:v2.2.0
    read_only: true
    hostname: traefik.gopnik.net
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /opt/traefik/traefik.yaml:/traefik.yaml:ro
      - /opt/traefik/etc/traefik:/etc/traefik/
      - /opt/tarefik/log:/var/log/traefik/

volumes:
  portainer_data:
