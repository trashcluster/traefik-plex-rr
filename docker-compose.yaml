version: "3"
services:
  sonarr:
    image: ghcr.io/linuxserver/sonarr
    container_name: sonarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Paris
      - UMASK_SET=022 #optional
    volumes:
      - ./conf/sonarr/config:/config
      - /data:/data
    hostname: sonarr.gopnik.net
    #ports:
    #  - 8989:8989
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.sonarr.rule=Host(`sonarr.gopnik.net`)"
      - "traefik.http.routers.sonarr.entrypoints=websecure"
      - "traefik.http.routers.sonarr.tls.certresolver=mydnschallenge"
      - "traefik.http.services.sonarr.loadbalancer.server.port=8989"
      #- "traefik.http.routers.sonarr.middlewares=traefik-forward-auth"
    restart: unless-stopped

  # sonarrVF:
  #   image: ghcr.io/linuxserver/sonarr
  #   container_name: sonarrVF
  #   environment:
  #     - PUID=1000
  #     - PGID=1000
  #     - TZ=Europe/Paris
  #     - UMASK_SET=022 #optional
  #   volumes:
  #     - ./conf/sonarrvf/config:/config
  #     - /data:/data
  #   hostname: sonarrvf.gopnik.net
  #   #ports:
  #   #  - 8989:8989
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.sonarrvf.rule=Host(`sonarrvf.gopnik.net`)"
  #     - "traefik.http.routers.sonarrvf.entrypoints=websecure"
  #     - "traefik.http.routers.sonarrvf.tls.certresolver=mydnschallenge"
  #     - "traefik.http.services.sonarrvf.loadbalancer.server.port=8989"
  #     - "traefik.http.routers.sonarrvf.middlewares=traefik-forward-auth"
  #   restart: unless-stopped

  radarr:
    image: ghcr.io/linuxserver/radarr
    container_name: radarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Paris
      - UMASK_SET=022 #optional
    volumes:
      - ./conf/radarr/config:/config
      - /data:/data
    hostname: radarr.gopnik.net
    #ports:
    #  - 7878:7878
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.radarr.rule=Host(`radarr.gopnik.net`)"
      - "traefik.http.routers.radarr.entrypoints=websecure"
      - "traefik.http.routers.radarr.tls.certresolver=mydnschallenge"
      - "traefik.http.services.radarr.loadbalancer.server.port=7878"
      - "traefik.http.routers.radarr.middlewares=traefik-forward-auth"
    restart: unless-stopped

  # radarrVF:
  #   image: ghcr.io/linuxserver/radarr
  #   container_name: radarrVF
  #   environment:
  #     - PUID=1000
  #     - PGID=1000
  #     - TZ=Europe/Paris
  #     - UMASK_SET=022 #optional
  #   volumes:
  #     - ./conf/radarrvf/config:/config
  #     - /data:/data
  #   hostname: radarrvf.gopnik.net
  #   #ports:
  #   #  - 7878:7878
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.radarrvf.rule=Host(`radarrvf.gopnik.net`)"
  #     - "traefik.http.routers.radarrvf.entrypoints=websecure"
  #     - "traefik.http.routers.radarrvf.tls.certresolver=mydnschallenge"
  #     - "traefik.http.services.radarrvf.loadbalancer.server.port=7878"
  #     - "traefik.http.routers.radarrvf.middlewares=traefik-forward-auth"
  #   restart: unless-stopped

  nzbget:
    image: linuxserver/nzbget
    container_name: nzbget
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Paris
    volumes:
      - ./conf/nzbget/config:/config
      - /data:/data
    #ports:
    #  - 6789:6789
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nzbget.rule=Host(`nzbget.gopnik.net`)"
      - "traefik.http.routers.nzbget.entrypoints=websecure"
      - "traefik.http.routers.nzbget.tls.certresolver=mydnschallenge"
      - "traefik.http.services.nzbget.loadbalancer.server.port=6789"

  nzbhydra2:
    image: ghcr.io/linuxserver/nzbhydra2
    container_name: nzbhydra2
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/London
    volumes:
      - ./conf/nzbhydra2/config:/config
      - ./conf/nzbhydra2/downloads:/downloads
    #ports:
    #  - 5076:5076
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nzb2.rule=Host(`nzb2.gopnik.net`)"
      - "traefik.http.routers.nzb2.entrypoints=websecure"
      - "traefik.http.routers.nzb2.tls.certresolver=mydnschallenge"
      - "traefik.http.services.nzb2.loadbalancer.server.port=5076"
      - "traefik.http.routers.nzb2.middlewares=traefik-forward-auth"
      
  plex:
    image: plexinc/pms-docker:latest
    container_name: plex
    environment:
      - TZ=Europe/Paris
      - PLEX_CLAIM=claim-HocHKyyus2ra9VJGv35Y
      - ADVERTISE_IP=https://plex.gopnik.net:443
      - PLEX_UID=1000
      - PLEX_GID=1000
      - VERSION=docker
    volumes:
      - ./conf/plex/config:/config
      - ./conf/plex/transcode:/transcode
      - /data:/data
    hostname: plex.gopnik.net
    ports:
     - 32400:32400/tcp
     - 32400:32400/udp
     - 3005:3005/tcp
     - 8324:8324/tcp
     - 32469:32469/tcp
     - 1900:1900/udp
     - 32410:32410/udp
     - 32412:32412/udp
     - 32413:32413/udp
     - 32414:32414/udp
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.plex.rule=Host(`plex.gopnik.net`)"
      - "traefik.http.routers.plex.entrypoints=websecure"
      - "traefik.http.routers.plex.tls.certresolver=mydnschallenge"
      - "traefik.http.services.plex.loadbalancer.server.port=32400"
      
  traefik-forward-auth:
    image: thomseddon/traefik-forward-auth:2
    container_name: traefik-forward-auth
    restart: always
    environment:
      - DEFAULT_PROVIDER=oidc
      - PROVIDERS_OIDC_ISSUER_URL=OIDCIssuer
      - PROVIDERS_OIDC_CLIENT_ID=ClientID
      - PROVIDERS_OIDC_CLIENT_SECRET=ClientSecret
      - SECRET=SECRET
      # INSECURE_COOKIE is required if not using a https entrypoint
      - INSECURE_COOKIE=true
      - LOG_LEVEL=debug
    labels:
      - "traefik.http.routers.forwardauth.rule=Host(auth.gopnik.net)"
      - "traefik.http.routers.forwardauth.tls.certresolver=mydnschallenge"
      - "traefik.http.routers.forwardauth.tls=true" #Don't believe this is actually required
      - "traefik.http.routers.forwardauth.middlewares=traefik-forward-auth"
      - "traefik.http.middlewares.traefik-forward-auth.forwardauth.address=http://traefik-forward-auth:4181"
      - "traefik.http.middlewares.traefik-forward-auth.forwardauth.authResponseHeaders=X-Forwarded-User"
      - "traefik.http.middlewares.traefik-forward-auth.forwardauth.trustForwardHeader=true"
      - "traefik.http.services.traefik-forward-auth.loadbalancer.server.port=4181"


    tdarr:
    container_name: tdarr
    image: haveagitgat/tdarr:latest
    restart: unless-stopped
    ports:
      #- 8265:8265 # webUI port
      #- 8266:8266 # server port
      #- 8267:8267 # node port. It should be mapped on this container because
                  # the node container use the network from the main container
    environment:
      - TZ=Europe/Paris
      - PUID=1000
      - PGID=1000
      - UMASK_SET=002
      - serverIP=0.0.0.0
      - serverPort=8266
      - webUIPort=8265
    volumes:
      - ./conf/tdarr/server:/app/server
      - ./conf/tdarr/configs:/app/configs
      - ./conf/tdarr/logs:/app/logs
      - /data:/data
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.tdarr.rule=Host(`tdarr.gopnik.net`)"
      - "traefik.http.routers.tdarr.entrypoints=websecure"
      - "traefik.http.routers.tdarr.tls.certresolver=mydnschallenge"
      - "traefik.http.services.tdarr.loadbalancer.server.port=8265"

  tdarr-node:
    container_name: tdarr-node
    image: haveagitgat/tdarr_node:latest
    restart: unless-stopped
    environment:
      - TZ=Europe/Pariss
      - PUID=${PUID}
      - PGID=${PGID}
      - UMASK_SET=002
      - nodeID=MainNode
      - nodeIP=0.0.0.0
      - nodePort=8267
      - serverIP=0.0.0.0
      - serverPort=8266
    volumes:
      - ./conf/tdarrnode/configs:/app/configs
      - ./conf/tdarrnode/logs:/app/logs
      - /data:/data
  ######################################################################################################################

  traefik:
    restart: always
    container_name: traefik
    image: traefik:latest
    read_only: true
    hostname: traefik.gopnik.net
    ports:
      - "80:80"
      - "443:443"
      #- "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik.yaml:/traefik.yaml:ro
      - ./conf/traefik/etc/traefik:/etc/traefik/
      - ./conf/traefik/log:/var/log/traefik/
